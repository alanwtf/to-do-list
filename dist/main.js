(()=>{class t{constructor(t,e){this.name=t,this.isDone=e}}class e{constructor(t){this.name=t,this.toDoArr=[]}}class o{static getProjects(){let t;return t=null===localStorage.getItem("projects")?[]:JSON.parse(localStorage.getItem("projects")),t}static addProject(t){const e=o.getProjects();e.push(t),localStorage.setItem("projects",JSON.stringify(e))}static removeProject(t){console.log("Entre");const e=o.getProjects();e.forEach(((o,c)=>{o.name===t&&e.splice(c,1)})),localStorage.setItem("projects",JSON.stringify(e))}static getProject(t){const e=o.getProjects();console.log(e,t);for(let o=0;o<e.length;o++)if(e[o].name===t)return e[o];return null}static updateProject(t,e){const c=o.getProjects();c.forEach(((o,r)=>{o.name===t&&c.splice(r,1,e)})),localStorage.setItem("projects",JSON.stringify(c))}static addToDo(t,e){const c=o.getProject(t);c.toDoArr.push(e),o.updateProject(t,c)}static deleteToDo(t,e){const c=o.getProject(t);c.toDoArr.forEach(((t,o)=>{t.name===e&&c.toDoArr.splice(o,1)})),o.updateProject(c.name,c)}static toggleToDo(t,e){const c=o.getProject(t);let r=!1;return c.toDoArr.forEach(((t,o)=>{t.name===e&&(c.toDoArr[o].isDone=!c.toDoArr[o].isDone,r=c.toDoArr[o].isDone)})),o.updateProject(c.name,c),r}}class c{static addProject(t){const e=document.createElement("div"),o=document.querySelector(".projects");e.innerHTML=`<div>${t.name}</div><span class="expand">></span>`,e.className="project",o.appendChild(e)}static renderProjects(){document.querySelector(".projects").innerHTML="",o.getProjects().forEach((t=>{c.addProject(t)}))}static showProject(t){const e=document.querySelector("#todo-title"),c=document.querySelector(".todo-list");if(c.innerHTML="",""===t)return e.textContent="default",0;const r=o.getProject(t);console.log(r),r.toDoArr.forEach((t=>{let e=document.createElement("div");e.className="todo",e.innerHTML=`<div class="name-isdone">\n                                    <span class="icon isDone ${t.isDone?"done":""}">âœ“</span>\n                                    <div class="title">${t.name}</div>\n                                </div>\n                                <div class="action-buttons">\n                                    <span class="delete-todo icon float-right">X</span>\n                                </div>`,c.appendChild(e)})),e.textContent=r.name}static toggleToDo(t,e){e?t.classList.add("done"):t.classList.remove("done")}}document.querySelector("#add-project").addEventListener("click",(t=>{let r=prompt("What's the name of the project?","unnamed"),n=new e(r);c.addProject(n),o.addProject(n)})),document.querySelector(".projects").addEventListener("click",(t=>{t.target.classList.contains("expand")&&c.showProject(t.target.parentNode.querySelector("div").textContent)})),document.addEventListener("DOMContentLoaded",(()=>{c.renderProjects()})),document.querySelector("#add-item").addEventListener("click",(e=>{const r=prompt("name of todo"),n=new t(r,!1),s=document.querySelector("#todo-title").textContent;o.addToDo(s,n),c.showProject(s)})),document.querySelector("#delete-project").addEventListener("click",(t=>{const e=document.querySelector("#todo-title").textContent;o.removeProject(e),c.renderProjects(),c.showProject("")})),document.querySelector(".todo-list").addEventListener("click",(t=>{const e=document.querySelector("#todo-title").textContent,r=t.target.parentNode.parentNode.querySelector(".title").textContent;let n=!1;t.target.classList.contains("delete-todo")?(o.deleteToDo(e,r),c.showProject(e)):t.target.classList.contains("isDone")&&(console.log("HOLA"),n=o.toggleToDo(e,r)),c.toggleToDo(t.target,n)}))})();